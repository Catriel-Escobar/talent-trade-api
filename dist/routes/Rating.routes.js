"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const validateParamObjectId_1 = require("../middlewares/validateParamObjectId");
const validateBody_1 = require("../middlewares/validateBody");
const rating_schema_1 = require("../utils/schema/rating.schema");
const Rating_controller_1 = require("../controllers/Rating.controller");
const Rating_service_1 = require("../services/Rating.service");
const Rating_repository_1 = require("../repositories/Rating.repository");
const authValidate_1 = require("../middlewares/authValidate");
const ratingRepository = new Rating_repository_1.RatingRepository();
const ratingService = new Rating_service_1.RatingService(ratingRepository);
const ratingController = new Rating_controller_1.RatingController(ratingService);
const routerRating = (0, express_1.Router)();
routerRating.param("ratingId", (0, validateParamObjectId_1.middlewareParamsObjectId)("ratingId"));
routerRating.param("userId", (0, validateParamObjectId_1.middlewareParamsObjectId)("userId"));
routerRating.get("/rating", authValidate_1.authValidateAdmin, ratingController.find);
routerRating.get("/rating/user/:userId", authValidate_1.authValidatePassport, authValidate_1.authValidateAdmin, ratingController.findByUserId);
routerRating.get("/rating/featured", ratingController.findFeaturedRatings);
routerRating.get("/rating/:ratingId", authValidate_1.authValidatePassport, authValidate_1.authValidateAdmin, ratingController.findById);
routerRating.post("/rating", authValidate_1.authValidatePassport, (0, validateBody_1.middlewareBody)(rating_schema_1.CreateRatingSchema), ratingController.create);
routerRating.put("/rating", authValidate_1.authValidatePassport, ratingController.updateComment);
routerRating.put("/rating/featured", authValidate_1.authValidatePassport, authValidate_1.authValidateAdmin, (0, validateBody_1.middlewareBody)(rating_schema_1.RatingIdsSchema), ratingController.updateFeaturedRatings);
routerRating.delete("/rating/user/:userId", authValidate_1.authValidatePassport, authValidate_1.authValidateAdmin, ratingController.deleteByUserId);
routerRating.delete("/rating/:ratingId", authValidate_1.authValidatePassport, authValidate_1.authValidateAdmin, ratingController.deleteById);
exports.default = routerRating;
