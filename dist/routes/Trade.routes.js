"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authValidate_1 = require("../middlewares/authValidate");
const Trade_controller_1 = require("../controllers/Trade.controller");
const Trade_service_1 = require("../services/Trade.service");
const Trade_repository_1 = require("../repositories/Trade.repository");
const User_repository_1 = require("../repositories/User.repository");
const validateBody_1 = require("../middlewares/validateBody");
const trade_schema_1 = require("../utils/schema/trade.schema");
const validateParamObjectId_1 = require("../middlewares/validateParamObjectId");
const userRepository = new User_repository_1.UserRepository();
const tradeRepository = new Trade_repository_1.TradeRepository();
const tradeService = new Trade_service_1.TradeService(tradeRepository, userRepository);
const tradeController = new Trade_controller_1.TradeController(tradeService);
const routerTrade = (0, express_1.Router)();
routerTrade.param("tradeId", (0, validateParamObjectId_1.middlewareParamsObjectId)("tradeId"));
routerTrade.post("/trade", authValidate_1.authValidatePassport, (0, validateBody_1.middlewareBody)(trade_schema_1.TradeSchema), tradeController.create);
routerTrade.put("/trade/:tradeId", authValidate_1.authValidatePassport, tradeController.updateAccepted);
routerTrade.delete("/trade/:tradeId", authValidate_1.authValidatePassport, tradeController.delete);
routerTrade.get("/trade/find-one/:tradeId", authValidate_1.authValidatePassport, tradeController.findOne);
routerTrade.get("/trade/", authValidate_1.authValidatePassport, tradeController.findTrades);
exports.default = routerTrade;
